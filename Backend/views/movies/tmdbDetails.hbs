<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{movie.title}} - Netflix Clone</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Netflix+Sans:wght@300;400;500;700&display=swap');

        :root {
            --netflix-red: #E50914;
            --netflix-black: #141414;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Netflix Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
        }

        body {
            background-color: var(--netflix-black);
            color: white;
        }

        .hero-section {
            position: relative;
            height: 80vh;
            background-size: cover;
            background-position: center;
        }

        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.9) 100%);
        }

        .hero-content {
            position: relative;
            z-index: 10;
            padding-top: 20vh;
        }

        .genre-tag {
            background-color: rgba(255, 255, 255, 0.1);
            transition: background-color 0.3s ease;
        }

        .genre-tag:hover {
            background-color: var(--netflix-red);
        }

        .navbar {
            background-color: transparent;
            transition: background-color 0.3s ease;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 100;
        }

        .navbar.scrolled {
            background-color: var(--netflix-black);
        }

        .netflix-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: rgba(229, 9, 20, 0.9);
            color: white;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        .tmdb-label {
            font-size: 12px;
            color: #aaa;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar px-4 py-3">
        <div class="container mx-auto flex justify-between items-center">
            <div class="flex items-center space-x-6">
                <a href="/dashboard" class="text-red-600">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/200px-Netflix_2015_logo.svg.png" alt="Netflix Logo" class="h-7">
                </a>
                <ul class="hidden md:flex space-x-6">
                    <li><a href="/dashboard" class="text-white hover:text-gray-300">Home</a></li>
                    <li><a href="/movies" class="text-white font-medium hover:text-gray-300">Movies</a></li>
                    <li><a href="/mylist" class="text-white hover:text-gray-300">My List</a></li>
                </ul>
            </div>
            <div class="flex items-center space-x-4">
                <div class="dropdown relative group">
                    <button class="flex items-center space-x-1">
                        <img src="https://ui-avatars.com/api/?name={{user.username}}&background=random" alt="Profile" class="w-8 h-8 rounded-sm">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                        </svg>
                    </button>
                    <div class="hidden group-hover:block absolute right-0 mt-2 w-48 bg-black border border-gray-800 rounded shadow-lg z-50">
                        <a href="/profile" class="block px-4 py-2 text-white hover:bg-gray-800">Profile</a>
                        <a href="/account" class="block px-4 py-2 text-white hover:bg-gray-800">Account</a>
                        {{#if user.isPremium}}
                            <div class="px-4 py-2 text-sm text-red-600 font-semibold">Premium Member</div>
                        {{else}}
                            <a href="/upgrade" class="block px-4 py-2 text-red-600 hover:bg-gray-800">Upgrade to Premium</a>
                        {{/if}}
                        <div class="border-t border-gray-800 my-1"></div>
                        <a href="/logout" class="block px-4 py-2 text-white hover:bg-gray-800">Sign Out</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <div class="hero-section" style="background-image: url('{{movie.backdropPath}}');">
        <div class="hero-overlay"></div>
        <div class="container mx-auto px-4">
            <div class="hero-content max-w-2xl">
                <h1 class="text-4xl md:text-5xl font-bold mb-3">{{movie.title}}</h1>
                <div class="flex items-center space-x-4 mb-4">
                    <span class="text-green-500 font-semibold">{{movie.ratings}}% Match</span>
                    <span>{{movie.releaseDate}}</span>
                    {{#if movie.runtime}}
                        <span>{{movie.runtime}} min</span>
                    {{/if}}
                    {{#if isFromTMDB}}
                        <span class="bg-blue-600 text-white text-xs px-2 py-0.5 rounded">TMDB</span>
                    {{/if}}
                </div>
                <div class="flex flex-wrap gap-2 mb-4">
                    {{#each movie.genres}}
                        <span class="genre-tag text-sm px-3 py-1 rounded-full">{{this}}</span>
                    {{/each}}
                </div>
                <p class="text-gray-300 text-lg mb-8">{{movie.overview}}</p>
                <div class="flex flex-wrap gap-4 mb-6">
                    {{#if movie.videoUrl}}
                    <a href="/movies/tmdb/{{movie.tmdbId}}/watch" class="bg-red-600 text-white px-6 py-3 rounded hover:bg-red-700 transition-colors flex items-center">
                        <i class="fas fa-play mr-2"></i> Watch Now
                    </a>
                    {{/if}}
                    
                    <button id="watchlist-btn" class="bg-gray-700 text-white px-6 py-3 rounded hover:bg-gray-600 transition-colors flex items-center" 
                            data-tmdb-id="{{movie.tmdbId}}" 
                            data-in-watchlist="{{inWatchlist}}">
                        <i class="fas {{#if inWatchlist}}fa-check-circle{{else}}fa-plus{{/if}} mr-2"></i>
                        {{#if inWatchlist}}In My List{{else}}Add to My List{{/if}}
                    </button>
                </div>
                
                {{#if isFromTMDB}}
                <div class="tmdb-label">
                    Data provided by <a href="https://www.themoviedb.org/" target="_blank" class="text-blue-400 hover:underline">The Movie Database (TMDB)</a>
                </div>
                {{/if}}
            </div>
        </div>
    </div>

    <div class="container mx-auto px-4 py-12">
        <!-- Cast Section -->
        {{#if movie.cast.length}}
        <div class="mb-12">
            <h2 class="text-2xl font-bold mb-6">Cast</h2>
            <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 gap-4">
                {{#each movie.cast}}
                <div class="bg-gray-800 rounded-lg overflow-hidden">
                    <div class="aspect-w-2 aspect-h-3 bg-gray-700">
                        {{#if this.profilePath}}
                        <img src="{{this.profilePath}}" alt="{{this.name}}" class="w-full h-full object-cover" 
                             onerror="this.onerror=null; this.src='https://via.placeholder.com/300x450?text=No+Image+Available';">
                        {{else}}
                        <div class="w-full h-full flex items-center justify-center bg-gray-700">
                            <i class="fas fa-user text-gray-500 text-4xl"></i>
                        </div>
                        {{/if}}
                    </div>
                    <div class="p-3">
                        <h3 class="font-bold">{{this.name}}</h3>
                        <p class="text-sm text-gray-400">{{this.character}}</p>
                    </div>
                </div>
                {{/each}}
            </div>
        </div>
        {{/if}}

        <!-- Similar Movies Section -->
        {{#if similarMovies.length}}
        <div>
            <h2 class="text-2xl font-bold mb-6">More Like This</h2>
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                {{#each similarMovies}}
                <div class="relative bg-gray-800 rounded-lg overflow-hidden group">
                    <a href="/movies/tmdb/{{this.tmdbId}}">
                        <div class="aspect-w-2 aspect-h-3">
                            <img src="{{this.posterPath}}" alt="{{this.title}}" class="w-full h-full object-cover transition-opacity group-hover:opacity-50" 
                                 onerror="this.onerror=null; this.src='https://via.placeholder.com/300x450?text=No+Image+Available';">
                        </div>
                        <div class="p-3">
                            <h3 class="font-bold group-hover:text-red-500 transition-colors">{{this.title}}</h3>
                            <div class="flex items-center mt-1">
                                <span class="text-sm text-green-500">{{this.ratings}}%</span>
                                <span class="text-xs ml-2 text-gray-400">{{this.releaseDate}}</span>
                            </div>
                        </div>
                    </a>
                </div>
                {{/each}}
            </div>
        </div>
        {{/if}}
    </div>

    <script>
        // Navbar scroll effect
        window.addEventListener('scroll', function() {
            const navbar = document.querySelector('.navbar');
            if (window.scrollY > 10) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });
        
        // Watchlist button functionality
        document.getElementById('watchlist-btn')?.addEventListener('click', async function() {
            const tmdbId = this.dataset.tmdbId;
            const currentlyInWatchlist = this.dataset.inWatchlist === 'true';
            
            try {
                const response = await fetch(`/movies/tmdb/${tmdbId}/watchlist`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to update watchlist');
                }
                
                const data = await response.json();
                
                // Update button state
                this.dataset.inWatchlist = !currentlyInWatchlist;
                if (!currentlyInWatchlist) {
                    this.innerHTML = '<i class="fas fa-check-circle mr-2"></i> In My List';
                } else {
                    this.innerHTML = '<i class="fas fa-plus mr-2"></i> Add to My List';
                }
                
                // Show notification
                const notification = document.createElement('div');
                notification.className = 'fixed bottom-5 right-5 bg-gray-900 border border-gray-700 text-white p-4 rounded-lg shadow-lg z-50';
                notification.innerText = currentlyInWatchlist ? 'Removed from My List' : 'Added to My List';
                document.body.appendChild(notification);
                
                // Remove notification after 3 seconds
                setTimeout(() => {
                    notification.remove();
                }, 3000);
                
            } catch (error) {
                console.error('Error updating watchlist:', error);
                alert('Failed to update watchlist. Please try again.');
            }
        });
    </script>
</body>
</html> 